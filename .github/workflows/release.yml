name: 'Release'

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
      - '.vscode'
      - '.github/workflows/release_maanode.yml'
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i

      - name: Change Version
        shell: bash
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          if $is_release; then
            ver=${{ github.ref_name }}
            ver=${ver:1}
          else
            ver=`git describe --tags --match "v*" --long | sed -E 's/^v([0-9]+\.[0-9]+\.[0-9]+)-([0-9]+)-g([a-f0-9]+)/\1-post.\2-ci.g\3/'`-`git rev-parse --abbrev-ref HEAD`
          fi
          echo "Change version to ${ver}"
          npm --prefix release pkg set version=${ver}

      - name: Build extension
        shell: bash
        run: |
          node scripts/build.mjs

      - name: Package extension
        shell: bash
        run: |
          npm i -g @vscode/vsce
          cd release
          vsce package
          mkdir vsix
          cp *.vsix vsix/

      - uses: actions/upload-artifact@v4
        with:
          name: maa-support-extension
          path: 'release/vsix'

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: assets

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install vsce
        run: |
          npm i -g vsce

      - name: Publish
        run: |
          vsce publish -p ${{ secrets.VSCE_TOKEN }} --packagePath assets/maa-support-extension/*.vsix
